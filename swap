Task
import { FaTimes } from "react-icons/fa";

const Task = ({ task, onDelete, onToggle }) => {

  return (
    <div 
    className={`task ${task.reminder ? 'reminder' : ''}`}
     onClick={() => onToggle(task.id)}
     >  
      <h3>
        {task.text}{' '}
        <FaTimes
          style={{ color: "red", cursor: "pointer" }}
          onClick={() => onDelete(task.id)}
        />
      </h3>
      <p>{task.day}</p>
    </div>
  )
}

export default Task;

Tasks
import Task from "./Task";
const Tasks = ({ tasks, onDelete, onToggle }) => {
  return (
    <>
      {tasks.map((task) => (
        <Task
          key={task.id}
          task={task}
          onDelete={onDelete}
          onToggle={onToggle}
        />
      ))}
    </>
  );
};

export default Tasks;

App
// import { useState, useEffect } from "react";

// function App() {
//   const [posts, setPosts] = useState([]);
//   const [randomPost, setRandomPost] = useState(null);

//   useEffect(() => {
//     async function fetchData() {
//       const response = await fetch(
//         "https://jsonplaceholder.typicode.com/posts"
//       );
//       const json = await response.json();
//       setPosts(json);
//     }
//     fetchData();
//   }, []);

//   const handleButtonClick = () => {
//     const randomIndex = Math.floor(Math.random() * posts.length);
//     const randomPost = posts[randomIndex];
//     setRandomPost(randomPost);
//   };

//   return (
//     <>
//       <h1>Quote's</h1>

//       <button onClick={handleButtonClick}>Generate Random Post</button>

//       {randomPost && (
//         <div>
//           <h2> Title: {randomPost.title}</h2>
//           <p> Body : {randomPost.body}</p>
//         </div>
//       )}
//     </>
//   );
// }

// export default App;

import React, { useState } from "react";
import Header from "./Components/Header";
import Banner from "./Components/Banner";
import Tasks from "./Components/Tasks";

const App = () => {
  const [tasks, setTasks] = useState([
    {
      id: 1,
      text: "Doctors Appointment",
      day: "Feb 5th at 2:30pm",
      reminder: true,
    },
    {
      id: 2,
      text: "Meeting at School",
      day: "Feb 6th at 1:30pm",
      reminder: true,
    },
  ]);
  const deleteTask = (id) => {
    setTasks(tasks.filter((task) => task.id !== id));
  };
  const toggleReminder = (id) => {
    setTasks(
      tasks.map((task) =>
        task.id === id ? { ...task, reminder: !task.reminder } : task
      )
    );
  };
  return (
    <div>
      <Header title="Expense Tracker" />
      <Banner description="Description  " />
      {tasks.length > 0 ? (
        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />
      ) : (
        "No Task"
      )}
    </div>
  );
};

export default App;

button
import PropTypes from "prop-types";
const Button = ({ color, text, onClick }) => {
  //   const onClick = (e) => {};
  return (
    <button
      className="btn"
      style={{ backgroundColor: color }}
      onClick={onClick}
    >
      {text}
    </button>
  );
};
Button.propType = {
  text: PropTypes.string,
  onClick: PropTypes.func,
};

export default Button;

banner
import React from "react";
import PropTypes from "prop-types";

const Banner = ({ description }) => {
  return (
    <>
      <h3 style={headingStyle}>{description}</h3>
    </>
  );
};

const headingStyle = {
  color: "black",
  background: "Gold",
  display: "flex",
  justifyContent: "center",
};
// eslint-disable-next-line react/no-typos
Banner.propTypes = {
  description: PropTypes.string.isRequired,
};

export default Banner;


